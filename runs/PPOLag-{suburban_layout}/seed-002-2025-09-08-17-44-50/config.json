{
    "seed": 2,
    "train_cfgs": {
        "device": "cuda:0",
        "torch_threads": 16,
        "vector_env_nums": 1,
        "parallel": 1,
        "total_steps": 10000000,
        "epochs": 3333
    },
    "algo_cfgs": {
        "steps_per_epoch": 3000,
        "update_iters": 12,
        "batch_size": 64,
        "target_kl": 0.02,
        "entropy_coef": 0.05,
        "reward_normalize": false,
        "cost_normalize": false,
        "obs_normalize": false,
        "kl_early_stop": true,
        "use_max_grad_norm": true,
        "max_grad_norm": 40.0,
        "use_critic_norm": true,
        "critic_norm_coef": 0.001,
        "gamma": 0.99,
        "cost_gamma": 0.99,
        "lam": 0.95,
        "lam_c": 0.95,
        "clip": 0.2,
        "adv_estimation_method": "gae",
        "standardized_rew_adv": true,
        "standardized_cost_adv": true,
        "penalty_coef": 0.0,
        "use_cost": true
    },
    "logger_cfgs": {
        "use_wandb": false,
        "wandb_project": "omnisafe",
        "use_tensorboard": true,
        "save_model_freq": 100,
        "log_dir": "./runs",
        "window_lens": 100
    },
    "model_cfgs": {
        "weight_initialization_mode": "kaiming_uniform",
        "actor_type": "gaussian_learning",
        "linear_lr_decay": true,
        "exploration_noise_anneal": false,
        "std_range": [
            0.5,
            0.1
        ],
        "actor": {
            "hidden_sizes": [
                64,
                64
            ],
            "activation": "tanh",
            "lr": 0.0003
        },
        "critic": {
            "hidden_sizes": [
                64,
                64
            ],
            "activation": "tanh",
            "lr": 0.0003
        }
    },
    "lagrange_cfgs": {
        "cost_limit": 0,
        "lagrangian_multiplier_init": 0.05,
        "lambda_lr": 0.045,
        "lambda_optimizer": "Adam"
    },
    "env_cfgs": {},
    "exp_increment_cfgs": {
        "train_cfgs": {
            "device": "cuda:0"
        }
    },
    "exp_name": "PPOLag-{suburban_layout}",
    "env_id": "suburban_layout",
    "algo": "PPOLag"
}